{"version":3,"sources":["file:///webpack/bootstrap","file:////home/arno/Projects/Programming/syncify/src/main.ts","file:////home/arno/Projects/Programming/syncify/src/models/settings.model.ts","file:////home/arno/Projects/Programming/syncify/src/models/sync-method.model.ts","file:////home/arno/Projects/Programming/syncify/src/services/factory.service.ts","file:////home/arno/Projects/Programming/syncify/src/services/init.service.ts","file:////home/arno/Projects/Programming/syncify/src/services/repo.service.ts","file:////home/arno/Projects/Programming/syncify/src/services/settings.service.ts","file:////home/arno/Projects/Programming/syncify/src/state.ts","file:///external \"fs\"","file:///external \"path\"","file:///external \"vscode\""],"names":[],"mappings":"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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/main.ts\");\n","import * as vscode from \"vscode\";\nimport { InitService } from \"./services/init.service\";\nimport { state } from \"./state\";\n\nexport async function activate(context: vscode.ExtensionContext) {\n  state.context = context;\n\n  await InitService.init();\n}\n","import { SyncMethod } from \"./sync-method.model\";\n\nexport interface ISettings {\n  method: SyncMethod;\n  state: {\n    lastUpload: Date;\n  };\n}\n\nexport const defaultSettings: ISettings = {\n  method: SyncMethod.RepoService,\n  state: {\n    lastUpload: null\n  }\n};\n","export enum SyncMethod {\n  RepoService = \"repoService\"\n}\n","import { SyncMethod } from \"../models/sync-method.model\";\nimport { RepoService } from \"./repo.service\";\n\nexport class FactoryService {\n  public static generate(syncMethod: SyncMethod) {\n    return new this.methods[syncMethod]();\n  }\n  private static methods = {\n    [SyncMethod.RepoService]: RepoService\n  };\n}\n","import { commands } from \"vscode\";\nimport { state } from \"../state\";\nimport { FactoryService } from \"./factory.service\";\nimport { SettingsService } from \"./settings.service\";\n\nexport class InitService {\n  public static async init() {\n    state.settings = new SettingsService();\n    const settings = state.settings.getSettings();\n    state.sync = FactoryService.generate(settings.method);\n    this.registerCommands();\n  }\n\n  private static registerCommands() {\n    state.context.subscriptions.push(\n      commands.registerCommand(\n        \"syncify.sync\",\n        state.sync.sync.bind(state.sync)\n      ),\n      commands.registerCommand(\n        \"syncify.upload\",\n        state.sync.upload.bind(state.sync)\n      ),\n      commands.registerCommand(\n        \"syncify.download\",\n        state.sync.download.bind(state.sync)\n      ),\n      commands.registerCommand(\n        \"syncify.reset\",\n        state.sync.reset.bind(state.sync)\n      )\n    );\n  }\n}\n","import { window } from \"vscode\";\nimport { ISyncService } from \"../models/sync.model\";\n\nexport class RepoService implements ISyncService {\n  public async sync(): Promise<void> {\n    window.showInformationMessage(\"Syncing!\");\n  }\n  public async upload(): Promise<void> {\n    window.showInformationMessage(\"Uploading!\");\n  }\n  public async download(): Promise<void> {\n    window.showInformationMessage(\"Downloading!\");\n  }\n  public async isConfigured(): Promise<boolean> {\n    return true;\n  }\n  public async reset(): Promise<void> {\n    window.showInformationMessage(\"Resetting!\");\n  }\n}\n","import { existsSync, mkdirSync, readFileSync, writeFileSync } from \"fs\";\nimport { resolve } from \"path\";\nimport { defaultSettings, ISettings } from \"../models/settings.model\";\nimport { state } from \"../state\";\n\nexport class SettingsService {\n  public getSettings(): ISettings {\n    const filepath = resolve(state.context.globalStoragePath, \"settings.json\");\n    if (!existsSync(filepath)) {\n      this.setSettings(defaultSettings);\n      return defaultSettings;\n    }\n\n    try {\n      return {\n        ...defaultSettings,\n        ...JSON.parse(readFileSync(filepath, \"utf-8\"))\n      };\n    } catch (err) {\n      throw new Error(err);\n    }\n  }\n\n  public setSettings(settings: ISettings) {\n    if (!existsSync(state.context.globalStoragePath)) {\n      mkdirSync(state.context.globalStoragePath);\n    }\n\n    const filepath = resolve(state.context.globalStoragePath, \"settings.json\");\n\n    writeFileSync(filepath, JSON.stringify(settings, null, 2));\n  }\n}\n","import { IExtensionState } from \"./models/state.model\";\n\nexport const state: IExtensionState = {};\n","module.exports = require(\"fs\");","module.exports = require(\"path\");","module.exports = require(\"vscode\");"],"sourceRoot":""}